generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model animes_anime {
  is_translated            Boolean
  mal_id                   Int                    @id
  title                    String                 @db.VarChar(200)
  main_picture             Json?
  alternative_titles       Json?
  start_date               DateTime?              @db.Timestamptz(6)
  end_date                 DateTime?              @db.Timestamptz(6)
  synopsis                 String?
  mean                     Float?
  rank                     Int?
  popularity               Int?
  media_type               String                 @db.VarChar(10)
  status                   String                 @db.VarChar(20)
  num_episodes             Int
  start_season             Json?
  broadcast                Json?
  source                   String?                @db.VarChar(20)
  average_episode_duration Int?
  nsfw                     String?                @db.VarChar(20)
  rating                   String?                @db.VarChar(20)
  translated_by_id         Int?
  background               String?
  pictures                 Json?
  recommendations          Json?
  related_anime            Json?
  related_manga            Json?
  statistics               Json?
  auth_user                auth_user?             @relation(fields: [translated_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "animes_anime_translated_by_id_d52424b5_fk_auth_user_id")
  animes_anime_studios     animes_anime_studios[]
  animes_anime_tags        animes_anime_tags[]

  @@index([translated_by_id], map: "animes_anime_translated_by_id_d52424b5")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model animes_anime_studios {
  id            BigInt        @id @default(autoincrement())
  anime_id      Int
  studio_id     Int
  animes_anime  animes_anime  @relation(fields: [anime_id], references: [mal_id], onDelete: NoAction, onUpdate: NoAction, map: "animes_anime_studios_anime_id_c9209a79_fk_animes_anime_mal_id")
  animes_studio animes_studio @relation(fields: [studio_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "animes_anime_studios_studio_id_8c1453e8_fk_animes_studio_id")

  @@unique([anime_id, studio_id], map: "animes_anime_studios_anime_id_studio_id_18fb68c6_uniq")
  @@index([anime_id], map: "animes_anime_studios_anime_id_c9209a79")
  @@index([studio_id], map: "animes_anime_studios_studio_id_8c1453e8")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model animes_anime_tags {
  id           BigInt       @id @default(autoincrement())
  anime_id     Int
  tag_id       Int
  animes_anime animes_anime @relation(fields: [anime_id], references: [mal_id], onDelete: NoAction, onUpdate: NoAction, map: "animes_anime_tags_anime_id_42761c62_fk_animes_anime_mal_id")
  animes_tag   animes_tag   @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "animes_anime_tags_tag_id_061154f8_fk_animes_tag_id")

  @@unique([anime_id, tag_id], map: "animes_anime_tags_anime_id_tag_id_39863cef_uniq")
  @@index([anime_id], map: "animes_anime_tags_anime_id_42761c62")
  @@index([tag_id], map: "animes_anime_tags_tag_id_061154f8")
}

model animes_manga {
  id       Int   @id
  mal_data Json?
}

model animes_studio {
  id                   Int                    @id
  name                 String                 @db.VarChar(50)
  animes_anime_studios animes_anime_studios[]
}

model animes_tag {
  id                Int                 @id
  name              String              @db.VarChar(50)
  name_translated   String?             @db.VarChar(50)
  animes_anime_tags animes_anime_tags[]
}

model animes_url {
  id  Int     @id
  url String?
}

model api_anime {
  is_translated            Boolean
  mal_id                   Int                 @id
  title                    String              @db.VarChar(200)
  main_picture             Json?
  alternative_titles       Json?
  start_date               DateTime?           @db.Timestamptz(6)
  end_date                 DateTime?           @db.Timestamptz(6)
  synopsis                 String?
  translated_synopsis2     String?
  translated_synopsis      String?
  mean                     Float?
  rank                     Int?
  popularity               Int?
  media_type               String              @db.VarChar(10)
  status                   String              @db.VarChar(20)
  num_episodes             Int
  start_season             Json?
  broadcast                Json?
  source                   String?             @db.VarChar(20)
  average_episode_duration Int?
  nsfw                     String?             @db.VarChar(20)
  rating                   String?             @db.VarChar(20)
  api_anime_studios        api_anime_studios[]
  api_anime_tags           api_anime_tags[]
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model api_anime_studios {
  id         BigInt     @id @default(autoincrement())
  anime_id   Int
  studio_id  Int
  api_anime  api_anime  @relation(fields: [anime_id], references: [mal_id], onDelete: NoAction, onUpdate: NoAction, map: "api_anime_studios_anime_id_816c6ae4_fk_api_anime_mal_id")
  api_studio api_studio @relation(fields: [studio_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "api_anime_studios_studio_id_286f4548_fk_api_studio_id")

  @@unique([anime_id, studio_id], map: "api_anime_studios_anime_id_studio_id_19ec12f9_uniq")
  @@index([anime_id], map: "api_anime_studios_anime_id_816c6ae4")
  @@index([studio_id], map: "api_anime_studios_studio_id_286f4548")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model api_anime_tags {
  id        BigInt    @id @default(autoincrement())
  anime_id  Int
  tag_id    Int
  api_anime api_anime @relation(fields: [anime_id], references: [mal_id], onDelete: NoAction, onUpdate: NoAction, map: "api_anime_tags_anime_id_35e15e31_fk_api_anime_mal_id")
  api_tag   api_tag   @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "api_anime_tags_tag_id_df2e85f6_fk_api_tag_id")

  @@unique([anime_id, tag_id], map: "api_anime_tags_anime_id_tag_id_b5e689a0_uniq")
  @@index([anime_id], map: "api_anime_tags_anime_id_35e15e31")
  @@index([tag_id], map: "api_anime_tags_tag_id_df2e85f6")
}

model api_studio {
  id                Int                 @id
  name              String              @db.VarChar(50)
  api_anime_studios api_anime_studios[]
}

model api_tag {
  id              Int              @id
  name            String           @db.VarChar(50)
  name_translated String?          @db.VarChar(50)
  api_anime_tags  api_anime_tags[]
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]

  @@index([name], map: "auth_group_name_a6ea08ec_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_permission {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  content_type_id            Int
  codename                   String                       @db.VarChar(100)
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String                       @db.VarChar(128)
  last_login                 DateTime?                    @db.Timestamptz(6)
  is_superuser               Boolean
  username                   String                       @unique @db.VarChar(150)
  first_name                 String                       @db.VarChar(150)
  last_name                  String                       @db.VarChar(150)
  email                      String                       @db.VarChar(254)
  is_staff                   Boolean
  is_active                  Boolean
  date_joined                DateTime                     @db.Timestamptz(6)
  animes_anime               animes_anime[]
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  authtoken_token            authtoken_token?
  django_admin_log           django_admin_log[]

  @@index([username], map: "auth_user_username_6821ab7c_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_groups {
  id         BigInt     @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id")

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544")
  @@index([user_id], map: "auth_user_groups_user_id_6a12ed8b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_user_permissions {
  id              BigInt          @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id")

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permissions_permission_id_1fbb5f2c")
  @@index([user_id], map: "auth_user_user_permissions_user_id_a95ead1b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model authtoken_token {
  key       String    @id @db.VarChar(40)
  created   DateTime  @db.Timestamptz(6)
  user_id   Int       @unique
  auth_user auth_user @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "authtoken_token_user_id_35299eff_fk_auth_user_id")

  @@index([key], map: "authtoken_token_key_10f0b77e_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.Timestamptz(6)
  object_id           String?
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.SmallInt
  change_message      String
  content_type_id     Int?
  user_id             Int
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  auth_user           auth_user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.Timestamptz(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String
  expire_date  DateTime @db.Timestamptz(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
  @@index([session_key], map: "django_session_session_key_c0390e0f_like")
}

model hello_greeting {
  id   BigInt   @id @default(autoincrement())
  when DateTime @db.Timestamptz(6)
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}